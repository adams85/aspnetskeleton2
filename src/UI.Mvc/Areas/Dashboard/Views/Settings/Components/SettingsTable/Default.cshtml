@using WebApp.UI.Models.DataTables
@using WebApp.UI.Areas.Dashboard.Models.Settings

@using static WebApp.UI.Models.DataTables.DataTableColumnDefinition
@using static WebApp.UI.Models.DataTables.DataTableColumnFilterDefinition

@model ListSettingsQuery

@inject IGlobalRazorHelpers<IDataTableHelpers> DataTableHelpers

@{
    var tableModel = (SettingsTableModel)ViewData[nameof(SettingsTableModel)];

    var tableDefinition = new DataTableDefinition(tableModel)
    {
        GenerateQueryUrl = (url, values) => url.RouteUrl(SettingsRouteName, values),

        OrderByFormFieldName = Html.NameFor(m => m.OrderBy),
        PageIndexFormFieldName = Html.NameFor(m => m.PageIndex),
        PageSizeFormFieldName = Html.NameFor(m => m.PageSize),

        ColumnsFactory = table => new DataTableColumnDefinition[]
        {
            new DataColumn(table, s_nameColumnBinding)
            {
                AscendingOrderIconCssClass = "fa-sort-alpha-asc",
                DescendingOrderIconCssClass = "fa-sort-alpha-desc",
                FilterFactory = column => new TextFilter(column, Html.NameFor(m => m.NamePattern), Model.NamePattern)
            },

            new DataColumn(table, s_valueColumnBinding)
            {
                AscendingOrderIconCssClass = "fa-sort-alpha-asc",
                DescendingOrderIconCssClass = "fa-sort-alpha-desc",
                FilterFactory = column => new TextFilter(column, Html.NameFor(m => m.ValuePattern), Model.ValuePattern)
            },

            new DataColumn(table, s_descriptionColumnBinding)
            {
                AscendingOrderIconCssClass = "fa-sort-alpha-asc",
                DescendingOrderIconCssClass = "fa-sort-alpha-desc",
                DataCellTemplate = @<td class="font-weight-light">@GetDescription((SettingData)item.Item)</td>,
                FilterFactory = column => new TextFilter(column, Html.NameFor(m => m.DescriptionPattern), Model.DescriptionPattern)
            },
        }
    };

    DataTableHelpers.Instance.Table(tableDefinition);
}

@functions {
    private static readonly DataTableColumnBinding s_nameColumnBinding = DataTableColumnBinding.For<SettingData>(m => m.Name);
    private static readonly DataTableColumnBinding s_valueColumnBinding = DataTableColumnBinding.For<SettingData>(m => m.Value);
    private static readonly DataTableColumnBinding s_descriptionColumnBinding = DataTableColumnBinding.For<SettingData>(m => m.Description);

    private static LocalizedHtmlString GetDescription(SettingData data) =>
        new LocalizedHtmlString(data.Description, data.Description, false, data.DefaultValue, data.MinValue, data.MaxValue);
}
