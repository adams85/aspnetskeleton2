@model WebApp.UI.Models.Account.SetPasswordModel

@inject ISettingsProvider SettingsProvider

<div class="page-header">
    <h1>@T["New Password"]</h1>
</div>

@if (Model.Success == null)
{
    <div>
        <form method="post" class="form-horizontal" role="form">
            <div class="row">
                <div class="col-sm-offset-2 col-sm-4" asp-validation-summary="ModelOnly"></div>
            </div>

            <div class="row form-group">
                <label asp-for="NewPassword" class="col-sm-2 control-label"></label>
                <div class="col-sm-4">
                    <input type="password" asp-for="NewPassword" class="form-control" />
                    <span asp-validation-for="NewPassword"></span>
                </div>
            </div>

            <div class="row form-group">
                <label asp-for="ConfirmPassword" class="col-sm-2 control-label"></label>
                <div class="col-sm-4">
                    <input type="password" asp-for="ConfirmPassword" class="form-control" />
                    <span asp-validation-for="ConfirmPassword"></span>
                </div>
            </div>

            <div class="row form-group">
                <div class="col-sm-offset-2 col-sm-10">
                    <button type="submit" class="btn btn-primary">@T["Set password"]</button>
                </div>
            </div>
        </form>
    </div>
}
else if (Model.Success.Value)
{
    <p class="lead text-info">
        @T["Your new password has been set."]
    </p>
    <p>
        @T["You can <a href=\"{0}\">login</a> now.",
            Url.Action("Login")]
    </p>
}
else
{
    <p>
        @T["Please try again or <a href=\"mailto:{0}\">contact the system administrator</a> if the problem persists.",
            SettingsProvider.AdminMailAddress()]
    </p>
}

@section ScriptsBody {
    @await Html.PartialAsync("Partials/_ValidationScripts")
}
